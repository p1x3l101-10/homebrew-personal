#!/usr/bin/env bash

function deref () {
	case $1 in
		'~p/'*) echo "$HOMEBREW_PREFIX/${1#'~p/'}";; #Prefix
		'~r/'*) echo "/${1#'~r/'}";; # Root
		'~h/'*) echo "$HOME/${1#'~h/'}";; # Home
		'~a/'*) echo "$HOME/Library/Application Support/${1#'~a/'}";; # App Data
		'~s/'*) echo "$HOME/Library/Saved Application State/${1#'~s/'}";; # Saved State
	esac
}

function linkgen () {
  local linkfile="$1"
  grep -v "^\s*[#;]" "$linkfile" | grep -v "^\s*$" | \
	  while IFS=':' read source target; do
		  realSource="$(deref "$source")"
		  realTarget="$(deref "$target")"
				if [[ -e "$realTarget" ]]; then
					echo "$target exists!"
        else
				  ln -s "$realSource" "$realTarget"
          echo "$source => $target"
				fi
      done
}

function linkdel () {
  local linkfile="$1"
  grep -v "^\s*[#;]" "$linkfile" | grep -v "^\s*$" | \
	  while IFS=':' read source target; do
		  realSource="$(deref "$source")"
		  realTarget="$(deref "$target")"
			if [[ -L "$realTarget" ]]; then
				rm "$realTarget"
			else
				echo "\'$target\' is not a link!"
			fi
    done
}

function fileback () {
  local linkfile="$1"
  local backuploc="$2"
  if [[ -e $backuploc ]]; then
    rm $backuploc
  fi
  cp $linkfile $backuploc
}

LINKFILE="$HOMEBREW_PREFIX/etc/homebrew/links.conf"
LINKFILE_ACTIVE="$HOMEBREW_PREFIX/Library/.links.db" # Hide the file so people dont delete it by accident

case $1 in
  '--clear')
    if ! [[ -e $LINKFILE_ACTIVE ]]; then
      echo "No active linkfile found!"
      exit 1
    fi
    linkdel "$LINKFILE_ACTIVE"
    ;;
  '')
    if [[ -e $LINKFILE_ACTIVE ]]; then
      linkdel "$LINKFILE_ACTIVE" # Clear out old links
    fi
    filebak "$LINKFILE" "$LINKFILE_ACTIVE"
    linkgen "$LINKFILE_ACTIVE"
    ;;
esac
